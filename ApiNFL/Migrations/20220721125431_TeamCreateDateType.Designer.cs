// <auto-generated />
using System;
using ApiNFL.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiNFL.Migrations
{
    [DbContext(typeof(NFLDbContext))]
    [Migration("20220721125431_TeamCreateDateType")]
    partial class TeamCreateDateType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiNFL.Model.Orm.Match", b =>
                {
                    b.Property<int>("TeamHomeId")
                        .HasColumnType("int");

                    b.Property<int>("TeamAwayId")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("ScoreAway")
                        .HasColumnType("int");

                    b.Property<int>("ScoreHome")
                        .HasColumnType("int");

                    b.HasKey("TeamHomeId", "TeamAwayId");

                    b.HasIndex("TeamAwayId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("ApiNFL.Model.Orm.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ApiNFL.Model.Orm.Team", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Conference")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TrophyCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ApiNFL.Model.Orm.Match", b =>
                {
                    b.HasOne("ApiNFL.Model.Orm.Team", "TeamAway")
                        .WithMany("MatchesAway")
                        .HasForeignKey("TeamAwayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiNFL.Model.Orm.Team", "TeamHome")
                        .WithMany("MatchesHome")
                        .HasForeignKey("TeamHomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiNFL.Model.Orm.Player", b =>
                {
                    b.HasOne("ApiNFL.Model.Orm.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId");
                });
#pragma warning restore 612, 618
        }
    }
}
